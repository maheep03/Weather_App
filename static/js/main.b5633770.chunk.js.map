{"version":3,"sources":["icons/temp.svg","icons/humidity.svg","icons/wind.svg","icons/pressure.svg","Components/WeatherComponent.js","icons/perfect-day.svg","Components/CityComponents.js","App.js","index.js"],"names":["WeatherInfoIcons","Sunset","Sunrise","Humidity","Humidty","Wind","Pressure","WeatherCondition","styled","div","_templateObject","_taggedTemplateLiteral","Condition","span","_templateObject2","WeatherLogo","img","_templateObject3","Location","_templateObject4","WeatherinfoLable","_templateObject5","WeatherInfoContainer","_templateObject6","InfoContainer","_templateObject7","InfoIcon","_templateObject8","InfoLabel","_templateObject9","WeatherInfoComponent","props","name","value","_jsxs","children","_jsx","src","WeatherComponent","_weather$weather$0$ic","_weather$sys","_weather$main","_weather$main2","_weather$wind","_weather$main3","timeStamp","weather","isDay","icon","includes","_Fragment","concat","sys","country","Math","floor","main","temp","description","Date","getHours","getMinutes","humidity","wind","speed","pressure","ChooseCityLabel","SearchBox","form","CityComponent","updatecity","fetchWeather","onSubmit","placeholder","onChange","e","target","type","Container","AppLabel","App","_useState","useState","_useState2","_slicedToArray","city","_useState3","_useState4","updateweather","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","preventDefault","axios","get","sent","console","log","data","stop","_x","apply","arguments","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5633770.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/temp.aa236718.svg\";","export default __webpack_public_path__ + \"static/media/humidity.38d0c2ff.svg\";","export default __webpack_public_path__ + \"static/media/wind.903e99b7.svg\";","export default __webpack_public_path__ + \"static/media/pressure.37f0a961.svg\";","import styled from 'styled-components';\nimport Sunrise from \"../icons/temp.svg\";\nimport Sunset from \"../icons/temp.svg\";\nimport Humidty from \"../icons/humidity.svg\";\nimport Wind from \"../icons/wind.svg\";\nimport Pressure from \"../icons/pressure.svg\";\n\n\nexport const WeatherInfoIcons = {\n    Sunset:   {Sunset},\n    Sunrise:  {Sunrise},\n    Humidity: {Humidty},\n    Wind:     {Wind},\n    Pressure: {Pressure},\n};\n\nconst WeatherCondition = styled.div`\ndisplay:flex;\nflex-direction: row;\ncolor:white;\nalign-item: center;\nwidth: 100%;\njustify-content: space-between;\nmargin 13px auto\n`;\n\nconst Condition = styled.span`\ncolor: white;\nmargin: 20px auto;\nfont-size: 14px;\n& span {\n    font-size: 28px;\n\n}\n`;\n\nconst WeatherLogo = styled.img`\nwidth: 100px;\nheight: 100px;\nmargin: 5px auto;\n`;\n\n\nconst Location = styled.span`\ncolor:white;\nfont-size: 28px;\nfont-weight: bold;\nmargin-top: 20px;\n`;\n\nconst WeatherinfoLable = styled.span`\ncolor:white;\nfont-size: 16px;\nfont-weight: bold;\nmargin: 20px 25px 10px; \ntext-align: start;\nwidth: 90%;\nmargin-top: -15px;\n`;\n\nconst WeatherInfoContainer = styled.div`\n  display: flex;\n  color:white;\n  width: 90%;\n  flex-direction: row;\n  justify-content: space-evenly;\n  align-items: center;\n  flex-wrap: wrap;\n`;\nconst InfoContainer = styled.div`\n  display: flex;\n  margin: 5px 10px;\n  flex-direction: row;\n  justify-content: space-evenly;\n  align-items: center;\n`;\nconst InfoIcon = styled.img`\n  width: 36px;\n  height: 36px;\n\n`;\nconst InfoLabel = styled.span`\n  display: flex;\n  flex-direction: column;\n  font-size: 14px;\n  margin: 15px;\n  & span {\n    font-size: 12px;\n    text-transform: capitalize;\n  }\n`;\n\nconst WeatherInfoComponent = (props) => {\n    const {name,value} = props;\n    return (\n        <InfoContainer>\n            <InfoIcon src={WeatherInfoIcons[name]} />\n            <InfoLabel>\n                {value}\n                <span>{name}</span>\n            </InfoLabel>\n        </InfoContainer>\n    );\n};\n\nconst WeatherComponent = (props) => {\n\n    const { weather } = props;\n    const isDay = weather?.weather[0].icon?.includes('d');\n    const getTime = (timeStamp) => {\n        return `${new Date(timeStamp * 1000).getHours()} : ${new Date(timeStamp * 1000).getMinutes()}`\n    }\n\n    return(\n        <>\n        <Location>{`${weather?.name}, ${weather?.sys?.country}`}</Location>\n        <WeatherCondition>\n            <Condition>\n                <span>{`${Math.floor(weather?.main?.temp - 273)}Â°C`}</span>\n                {`  |  ${weather?.weather[0].description}`}\n            </Condition>\n            <WeatherLogo src=\"/icons/perfect-day.svg\"/>\n        </WeatherCondition>\n        <WeatherinfoLable>Weather Info</WeatherinfoLable>\n        <WeatherInfoContainer>\n            <WeatherInfoComponent name={isDay ? \"Sunset\":\"Sunrise\"} \n                                  value={`${getTime(weather?.sys[isDay ? \"sunset\" : \"sunrise\"])}`}/>\n            <WeatherInfoComponent name=\"Humidity\" value={weather?.main?.humidity}/>\n            <WeatherInfoComponent name=\"Wind\" value={weather?.wind?.speed}/>\n            <WeatherInfoComponent name=\"Pressure\" value={weather?.main?.pressure}/>\n        </WeatherInfoContainer>\n        </>\n    );\n};\n\nexport default WeatherComponent;","export default __webpack_public_path__ + \"static/media/perfect-day.5156c281.svg\";","import styled from 'styled-components';\nimport img from '../icons/perfect-day.svg';\n\nconst WeatherLogo = styled.img`\nwidth: 140px;\nheight: 140px;\nmargin: 40px auto;\n`\n\nconst ChooseCityLabel = styled.span`\ncolor: white;\nfont-size: 18px;\nfont-weight: bold;\nmargin: 10px auto\n`\n\nconst SearchBox = styled.form`\ndisplay: flex;\nflex-direction: row;\nborder: black solid 1px;\nborder-radius: 2px;\nborder-color: white;\ncolor: black;\nfont-size: 18px;\nfont-weight: bold;\nmargin: 20px auto\n& input{\n    padding: 10px;\n    font-size: 14px;\n    outline: none;\n    border: none;\n    font-weight: bold;\n}\n\n& button{\n    padding: 10px;\n    font-size: 14px;\n    outline: none;\n    border: none;\n    font-weight: bold;\n    color:white;\n    background-color: black;\n    cursor: pointer;\n}\n`\n\n\n\nconst CityComponent = (props) => {\n    const {updatecity, fetchWeather} = props;\n\n    return(\n        <>\n        <WeatherLogo src={img}/>\n        <ChooseCityLabel>Find Weather of the City</ChooseCityLabel>\n        <SearchBox onSubmit={fetchWeather}>\n            <input placeholder=\"City\" onChange={(e)=> updatecity(e.target.value)}\n            />\n            <button type=\"submit\">Search</button>\n        </SearchBox>\n        </>\n    );\n};\n\nexport default CityComponent;","import styled from 'styled-components';\nimport { useState } from 'react';\nimport WeatherComponent from './Components/WeatherComponent';\nimport CityComponent from './Components/CityComponents';\nimport axios from 'axios';\n\nconst Container = styled.div`\ndisplay: flex;\nflex-direction : column;\nmargin: auto;\nalign-items: center;\nbox-shadow: 0 3px 6px 0 #555;\npadding: 20px 10px;\nborder-radius: 4px;\nwidth: 380px;\nbackground: black;\nfont-family: Montserrat\n`;\n\n\nconst AppLabel = styled.div`\ncolor: white;\nmargin: 20px auto;\nfont-size: 20px;\nfont-weight: bold;\n`;\n\n\n\nfunction App() {\n  const [city, updatecity] = useState();\n  const [weather, updateweather] = useState();\n\n  const fetchWeather = async(e) => {\n    e.preventDefault();\n    const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=d8be39510f66b94d1859317a8e9cab91`)\n    console.log(response)\n    updateweather(response.data);\n  };\n\n\n  return <Container>\n    <AppLabel>Weather App</AppLabel>\n    {\n      weather ? <WeatherComponent weather={weather}/> \n      : <CityComponent updatecity={updatecity} fetchWeather={fetchWeather}/>\n    }\n    \n  </Container>\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}